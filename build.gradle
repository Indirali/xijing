apply from: 'dependencies.gradle'

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE"

        // 以下为swagger转换 asciidoc 插件
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        // swagger2markup 插件
        classpath 'io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.2.0'
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.2.0'
        classpath 'io.github.swagger2markup:swagger2markup-import-files-ext:1.3.1'
    }
}



allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    //swagger to doc
    apply plugin: 'org.asciidoctor.convert'
    apply plugin: 'io.github.swagger2markup'
    apply plugin: 'io.spring.dependency-management'

    group = 'xijing'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
    compileGroovy.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    compileTestGroovy.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'


    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }

}

subprojects {

    // 对子项目应用 SpringBoot 插件
    apply plugin: "org.springframework.boot"

    // 通用依赖
    dependencies {
        compile libraries.'commons-lang3'
        compile libraries.'joda-time'
        compile libraries.'lombok'
        compile libraries.'gson'

        // 为每个项目加载 Spring 开发热部署插件
        // 在打包时将会被自动排除
        compile libraries.'spring-boot-devtools'

        testCompile libraries.'spring-boot-starter-test'
    }

    // 全局排除
    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
        compile.exclude module: "fastjson"
    }

    // 项目私服
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }

    task wrapper(type: Wrapper) {
        description = "Gradle Wrapper Task"
        gradleVersion = '4.3.1'
    }
}


build {

    // 顶级 build 关闭所有子项目测试
    project(':xijing-admin').test.enabled = false
    project(':xijing-common').test.enabled = false
    project(':xijing-service').test.enabled = false
    project(':xijing-web').test.enabled = false

    // 确保 common、service 预先编译
    project(':xijing-service').build.dependsOn project(':xijing-common').build
    project(':xijing-admin').build.dependsOn project(':xijing-service').build
    project(':xijing-web').build.dependsOn project(':xijing-service').build

}

